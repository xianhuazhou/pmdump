<?php
/**
 * dump mysql databases and save the results as SQL format, 
 * then can import the results into other mysql database directly.
 *
 * @author xianhua.zhou@gmail.com
 */
class PMDump {
    private $pdo = null;
    private $options = array();

    /**
     * construct
     *
     * @param PDO $pdo
     * @param array $options
     *            int   limit_per_select =>  max number of rows per select
     *            bool  add_drop_table   =>  add "DROP TABLE IF EXISTS $table" or not
     *              
     * @param string $charset
     *
     */
    public function __construct(PDO $pdo, Array $options = array(), $charset = 'UTF8') 
    {
        $this->pdo = $pdo;
        $this->pdo->exec('SET NAMES ' . $charset);
        $this->options = array_merge(array(
            'limit_per_select' =>  1000,
            'add_drop_table' => true 
        ), $options);
    }

    /**
     * dump all of tables from the given database
     *
     * @param string $database  database name
     * @param string $file  store the dump result
     *
     * @return void 
     */
    public function dump($database, $file)
    {
        $addDropTable = isset($this->options['add_drop_table']) && 
            $this->options['add_drop_table'];

        $this->pdo->exec('USE ' . $database);
        $tables = $this->tables($database); 
        $this->writeFile($file, "-- Generated by PMDump at " . date('Y-m-d H:i:s'));
        $this->writeFile($file, "SET FOREIGN_KEY_CHECKS = 0;\n");
        foreach ($tables as $table) {
            $this->writeFile($file, "-- Table: " . $table);
            if ($addDropTable) {
                $this->writeFile($file, 'DROP TABLE IF EXISTS ' . $table . ';');
            }
            $this->dumpTableStructure($table, $file);
            $this->dumpTableData($table, $file);
            $this->writeFile($file, "");
        }
        $this->writeFile($file, "\nSET FOREIGN_KEY_CHECKS = 1;");
    }

    /**
     * get all of tables from the database
     *
     * @param string $database
     *
     * @return array
     */
    public function tables($database)
    {
        $this->pdo->exec('USE ' . $database);
        $stmt = $this->pdo->prepare("SHOW TABLES");
        $stmt->execute();
        $tables = array();
        while ($row = $stmt->fetch(PDO::FETCH_NUM)) {
            $tables[] = $row[0];
        }

        return $tables;
    }

    /**
     * get all of fields of the table
     *
     * @param string $table
     *
     * @return array
     */
    public function tableFields($table)
    {
        $stmt = $this->pdo->prepare("SHOW FIELDS FROM " . $table);
        $stmt->execute();
        $fields = array();
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $fields[] = $row['Field'];
        }

        return $fields;
    }

    /**
     * dump table structure into the file
     *
     * @param string $table  table name
     * @param string $file  store table structre
     *
     * @return string the table structure 
     */
    public function dumpTableStructure($table,  $file)
    {
        $stmt = $this->pdo->prepare("SHOW CREATE TABLE " . $table);
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_NUM);

        $this->writeFile($file, $row[1] . ';');

        return $row[0];
    }

    /**
     * dump table data into the file
     *
     * @param string $table table name
     * @param string $file
     *
     * @return void
     */
    public function dumpTableData($table, $file)
    {
        $pdo = $this->pdo;

        $fields = join(',', $this->tableFields($table));
        $row = $pdo->query("SELECT COUNT(*) FROM " . $table)->fetch(PDO::FETCH_NUM);
        $total = $row[0];

        $limitPerSelect = $this->options['limit_per_select'];

        $sql = 'INSERT INTO `' . $table . '`(' . $fields . ') VALUES';

        $position = 0;
        while ($position < $total) {
            $stmt = $pdo->query("SELECT * FROM " . $table . " LIMIT " . $position . ", " . $limitPerSelect);
            $rows = array();
            while ($row = $stmt->fetch(PDO::FETCH_NUM)) {
                $values = array();
                foreach (array_values($row) as $value) {
                    $values[] = $pdo->quote($value);
                }
                $rows[] = '(' . join(',', $values) . ')';
            }

            $this->writeFile($file, $sql . join(',', $rows) . ';');

            $position += $limitPerSelect;
        }
    }

    /**
     * write content into the file
     *
     * @param string $file
     * @param string $content
     *
     * @return int 
     */
    private function writeFile($file, $content)
    {
       return file_put_contents($file, $content . "\n", FILE_APPEND);
    }
}
